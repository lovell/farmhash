name: CI
on:
  - push
  - pull_request
permissions: {}
jobs:
  lint:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v5
        with:
          node-version: 24
      - run: npm install
      - run: npm run lint
  build:
    needs: lint
    permissions:
      contents: read
    name: build-${{ matrix.container || matrix.os }}-node${{ matrix.nodejs_version }}
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            container: rockylinux:8
            nodejs_version: 18
            package: "linux-x64"
          - os: ubuntu-24.04
            container: rockylinux:8
            nodejs_version: 20
          - os: ubuntu-24.04
            container: rockylinux:8
            nodejs_version: 22
          - os: ubuntu-24.04
            container: rockylinux:8
            nodejs_version: 24
          - os: ubuntu-24.04-arm
            container: arm64v8/rockylinux:8
            nodejs_version: 18
            package: "linux-arm64"
          - os: ubuntu-24.04-arm
            container: arm64v8/rockylinux:8
            nodejs_version: 20
          - os: ubuntu-24.04-arm
            container: arm64v8/rockylinux:8
            nodejs_version: 22
          - os: ubuntu-24.04-arm
            container: arm64v8/rockylinux:8
            nodejs_version: 24
          - os: ubuntu-24.04
            container: node:18-alpine3.17
            nodejs_version: 18
            package: "linuxmusl-x64"
          - os: ubuntu-24.04
            container: node:20-alpine3.18
            nodejs_version: 20
          - os: ubuntu-24.04
            container: node:22-alpine3.20
            nodejs_version: 22
          - os: ubuntu-24.04
            container: node:24-alpine3.22
            nodejs_version: 24
          - os: macos-15-intel
            nodejs_version: 18
            package: "darwin-x64"
          - os: macos-15-intel
            nodejs_version: 20
          - os: macos-15-intel
            nodejs_version: 22
          - os: macos-15-intel
            nodejs_version: 24
          - os: macos-15
            nodejs_version: 18
            package: "darwin-arm64"
          - os: macos-15
            nodejs_version: 20
          - os: macos-15
            nodejs_version: 22
          - os: macos-15
            nodejs_version: 24
          - os: windows-2025
            nodejs_version: 18
            package: "win32-x64"
          - os: windows-2025
            nodejs_version: 20
          - os: windows-2025
            nodejs_version: 22
          - os: windows-2025
            nodejs_version: 24
          - os: windows-11-arm
            nodejs_version: 20
            package: "win32-arm64"
          - os: windows-11-arm
            nodejs_version: 22
          - os: windows-11-arm
            nodejs_version: 24
    steps:
      - name: Dependencies (Rocky Linux glibc)
        if: contains(matrix.container, 'rockylinux')
        run: |
          curl -sL https://rpm.nodesource.com/setup_${{ matrix.nodejs_version }}.x | bash -
          dnf install -y gcc-toolset-14-gcc-c++ make git python3.12 nodejs
          echo "/opt/rh/gcc-toolset-14/root/usr/bin" >> $GITHUB_PATH
          echo "PYTHON=/usr/bin/python3.12" >> $GITHUB_ENV
      - name: Dependencies (Linux musl)
        if: contains(matrix.container, 'alpine')
        run: apk add build-base git python3 --update-cache
      - name: Dependencies (Python - macOS, Windows)
        if: contains(matrix.os, 'macos') || contains(matrix.os, 'windows')
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Dependencies (Node.js - macOS, Windows)
        if: contains(matrix.os, 'macos') || contains(matrix.os, 'windows')
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.nodejs_version }}
      - uses: actions/checkout@v4
      - run: npm install
      - run: npm run build
      - run: npm test
      - if: matrix.package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.package }}
          path: src/build/Release/farmhash-${{ matrix.package }}.node
          retention-days: 1
          if-no-files-found: error
  build-linuxmusl-arm64:
    permissions:
      contents: read
    needs: lint
    name: "build-linuxmusl-arm64-node${{ matrix.nodejs_version }}"
    runs-on: ubuntu-24.04-arm
    container:
      image: ${{ matrix.container }}
      volumes:
        - /opt:/opt:rw,rshared
        - /opt:/__e/node20:ro,rshared
    strategy:
      fail-fast: false
      matrix:
        include:
        - container: node:18-alpine3.17
          nodejs_version: 18
          package: "linuxmusl-arm64"
        - container: node:20-alpine3.18
          nodejs_version: 20
    steps:
      - name: Allow Linux musl containers on ARM64 runners # https://github.com/actions/runner/issues/801#issuecomment-2394425757
        shell: sh
        run: |
          sed -i "/^ID=/s/alpine/NotpineForGHA/" /etc/os-release
          apk add nodejs --update-cache
          mkdir /opt/bin
          ln -s /usr/bin/node /opt/bin/node
      - run: apk add build-base git python3 --update-cache
      - uses: actions/checkout@v4
      - run: npm install
      - run: npm run build
      - run: npm test
      - if: matrix.package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.package }}
          path: src/build/Release/farmhash-${{ matrix.package }}.node
          retention-days: 1
          if-no-files-found: error
  publish:
    needs:
      - build
      - build-linuxmusl-arm64
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v5
        with:
          node-version: 24
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: build
      - if: startsWith(github.ref, 'refs/tags/v')
        run: npm publish --tag=${{ contains(github.ref, '-rc') && 'rc' || 'latest' }}
